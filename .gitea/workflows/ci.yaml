name: CI

on:
  workflow_dispatch:
  release:
    types: [published]

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    steps:
      -
        name: Checkout code
        uses: actions/checkout@v4
      -
        name: Get version
        id: get_version
        run: echo "VERSION=${GITHUB_REF#refs/tags/}" >> $GITHUB_OUTPUT
      -
        name: Restore frontend cache
        id: frontend-cache
        uses: actions/cache@v4
        with:
          path: frontend/dist
          key: frontend-dist-${{ hashFiles('frontend/**') }}
          restore-keys: frontend-dist-
      -
        name: Set up Node.js
        if: steps.frontend-cache.outputs.cache-hit != 'true' # 仅在缓存未命中时执行构建
        uses: actions/setup-node@v4
        with:
          node-version: 22
          cache: 'npm'
          cache-dependency-path: frontend/package-lock.json
      -
        name: Set npm Registry
        if: steps.frontend-cache.outputs.cache-hit != 'true'
        run: |
          if [ -n "${{ vars.NPM_REPO }}" ]; then
            npm config set registry ${{ vars.NPM_REPO }}
          fi
      -
        name: Build frontend
        if: steps.frontend-cache.outputs.cache-hit != 'true'  
        run: |
          npm ci --prefix frontend
          npm run build --prefix frontend
      -
        name: Save updated cache
        if: steps.frontend-cache.outputs.cache-hit != 'true'
        uses: actions/cache@v4
        with:
          path: frontend/dist
          key: frontend-dist-${{ hashFiles('frontend/**') }}
      -
        name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      -
        name: Log in to Gitea Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ vars.DOCKER_REGISTRY }}
          username: ${{ secrets.DOCKERGITEA_USERNAME }}
          password: ${{ secrets.DOCKERGITEA_PASSWORD }}
      -
        name: Build and push
        uses: docker/build-push-action@v6
        with:
          context: .
          file: ./docker/Dockerfile-Copy-Dist
          platforms: linux/amd64,linux/arm64
          push: true
          tags: |
            ${{ vars.DOCKER_REGISTRY }}/xavier/migadu-bridge:latest
            ${{ vars.DOCKER_REGISTRY }}/xavier/migadu-bridge:${{ steps.get_version.outputs.VERSION }}
          build-args: |
            APK_REPO=${{ vars.APK_REPO }}
            GOPROXY=${{ vars.GOPROXY }}
